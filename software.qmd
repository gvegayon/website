---
title: "Software"
---

```{r}
#| echo: false
#| output: asis

# Function to fetch and parse software.bib
fetch_software <- function() {
  library(httr)
  library(stringr)
  
  # Fetch software.bib from resume repository
  url <- "https://raw.githubusercontent.com/gvegayon/resume/master/software.bib"
  
  tryCatch({
    response <- GET(url)
    
    if (status_code(response) == 200) {
      content <- content(response, "text", encoding = "UTF-8")
      
      # Parse BibTeX entries
      parse_bibtex_entry <- function(entry) {
        # Extract title
        title_match <- str_match(entry, "title\\s*=\\s*\\{([^}]+)\\}")
        title <- if (!is.na(title_match[2])) title_match[2] else "Untitled"
        
        # Extract URL
        url_match <- str_match(entry, "url\\s*=\\s*\\{([^}]+)\\}")
        url <- if (!is.na(url_match[2])) url_match[2] else ""
        
        # Extract note/description
        note_match <- str_match(entry, "note\\s*=\\s*\\{([^}]+)\\}")
        note <- if (!is.na(note_match[2])) note_match[2] else ""
        
        # Extract year
        year_match <- str_match(entry, "year\\s*=\\s*\\{([^}]+)\\}")
        year <- if (!is.na(year_match[2])) year_match[2] else ""
        
        return(list(title = title, url = url, note = note, year = year))
      }
      
      # Split into individual BibTeX entries
      entries <- str_split(content, "@\\w+\\{")[[1]]
      entries <- entries[entries != ""] # Remove empty entries
      
      cat("## R Packages and Software\n\n")
      cat("Below is a list of software packages and tools I have developed:\n\n")
      
      for (i in 2:length(entries)) { # Start from 2 since first element is usually empty
        entry <- paste0("@misc{", entries[i])
        parsed <- parse_bibtex_entry(entry)
        
        if (parsed$title != "Untitled") {
          if (parsed$url != "") {
            cat("- **[", parsed$title, "](", parsed$url, ")**", sep = "")
          } else {
            cat("- **", parsed$title, "**", sep = "")
          }
          
          if (parsed$year != "") {
            cat(" (", parsed$year, ")", sep = "")
          }
          
          if (parsed$note != "") {
            cat(": ", parsed$note, sep = "")
          }
          
          cat("\n")
        }
      }
      
    } else {
      cat("Error fetching software list: HTTP", status_code(response), "\n")
      show_fallback_software()
    }
  }, error = function(e) {
    cat("Error fetching software data:", e$message, "\n")
    show_fallback_software()
  })
}

# Fallback software list
show_fallback_software <- function() {
  cat("## R Packages and Software\n\n")
  cat("Here are some of the key software packages I have developed:\n\n")
  cat("- **[netplot](https://github.com/USCCANA/netplot)**: Beautiful network plots using ggplot2\n")
  cat("- **[ergmito](https://github.com/muriteams/ergmito)**: ERGMs for small networks\n") 
  cat("- **[slurmR](https://github.com/USCbiostats/slurmR)**: R and SLURM integration\n")
  cat("- **[ABCoptim](https://github.com/gvegayon/ABCoptim)**: Artificial Bee Colony optimization\n")
  cat("- **[netdiffuseR](https://github.com/USCCANA/netdiffuseR)**: Network diffusion analysis\n")
  cat("- **[epiworldR](https://github.com/UofUEpiBio/epiworldR)**: Agent-based modeling for epidemiology\n")
  cat("- **[rgexf](https://github.com/gvegayon/rgexf)**: R package for GEXF graph files\n\n")
  cat("For a complete and up-to-date list, please visit my [GitHub profile](https://github.com/gvegayon) ")
  cat("or the [software.bib file](https://github.com/gvegayon/resume/blob/master/software.bib) in my resume repository.\n")
}

# Execute the function
fetch_software()
```

## Development Philosophy

I believe in developing software that is:

- **Open Source**: All my packages are freely available under permissive licenses
- **Well Documented**: Comprehensive documentation with examples and tutorials  
- **Tested**: Rigorous testing to ensure reliability
- **Performant**: Optimized for speed, especially for large-scale computations
- **User-Friendly**: Intuitive APIs that follow R conventions

## Contributions

I actively contribute to the R ecosystem and have contributed to various open-source projects. My packages are available on:

- [CRAN](https://cran.r-project.org/) (The Comprehensive R Archive Network)
- [GitHub](https://github.com/gvegayon) (Development versions and additional tools)

## Support and Issues

If you encounter issues with any of my software or have feature requests, please:

1. Check the package documentation and examples
2. Search existing issues on the GitHub repository
3. Open a new issue with a reproducible example
4. For general questions, feel free to [email me](mailto:g.vegayon@gmail.com)